{"ast":null,"code":"var _jsxFileName = \"/Users/nathansobotka/Desktop/Class Files/Junior Fall/Cis5500/Cis5500-final-project/Website/client/src/pages/SongsPage.js\";\nimport React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { Table, Pagination, Select, Row, Col, Divider, Slider, Rate } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getSimilarArtists, getSongKeyTime } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst songColumns = [{\n  title: 'Name',\n  dataIndex: 'name_',\n  key: 'name_',\n  sorter: (a, b) => a.name_.localeCompare(b.name_)\n}, {\n  title: 'Artist',\n  dataIndex: 'artist',\n  key: 'artist',\n  sorter: (a, b) => a.artist_.localeCompare(b.artist)\n}, {\n  title: 'Key',\n  dataIndex: 'key_',\n  key: 'key_'\n}, {\n  title: 'Time Signature',\n  dataIndex: 'time_signature',\n  key: 'time_signature'\n}];\n\nclass SongsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songQuery: '',\n      similarSongKeyTime: []\n    };\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    this.handleSongQueryChange = this.handleSongQueryChange.bind(this);\n  }\n\n  handleSongQueryChange(event) {\n    this.setState({\n      songQuery: event.target.value\n    });\n  }\n\n  updateSearchResults() {\n    getSongKeyTime(this.state.songQuery, null, null).then(res => {\n      this.setState({\n        similarSongKeyTime: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    getSimilarArtists(this.state.artistQuery, null, null).then(res => {\n      this.setState({\n        topArtistResults: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Artist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"Name\",\n                value: this.state.artistQuery,\n                onChange: this.handleArtistQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '10vw'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '4vh'\n                },\n                onClick: this.updateSearchResults,\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Similar Songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table // return {\n        //   onClick: event => { this.goToMatch(record.MatchId) }, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n        // };\n        , {\n          dataSource: this.state.topArtistResults,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            title: \"Artist\",\n            dataIndex: \"artist_mb\",\n            sorter: (a, b) => a.artist_mb.localeCompare(b.artist_mb)\n          }, \"artist_mb\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Tags\",\n            dataIndex: \"tags_lastfm\"\n          }, \"Tags\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Column, {\n            title: \"Listeners\",\n            dataIndex: \"listeners_lastfm\",\n            sorter: (a, b) => a.listeners_lastfm - b.listeners_lastfm\n          }, \"listeners_lastfm\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SongsPage;","map":{"version":3,"sources":["/Users/nathansobotka/Desktop/Class Files/Junior Fall/Cis5500/Cis5500-final-project/Website/client/src/pages/SongsPage.js"],"names":["React","Form","FormInput","FormGroup","Button","Card","CardBody","CardTitle","Progress","Table","Pagination","Select","Row","Col","Divider","Slider","Rate","MenuBar","getSimilarArtists","getSongKeyTime","Column","ColumnGroup","Option","songColumns","title","dataIndex","key","sorter","a","b","name_","localeCompare","artist_","artist","SongsPage","Component","constructor","props","state","songQuery","similarSongKeyTime","updateSearchResults","bind","handleSongQueryChange","event","setState","target","value","then","res","results","componentDidMount","artistQuery","topArtistResults","render","width","margin","marginTop","handleArtistQueryChange","pageSizeOptions","defaultPageSize","showQuickJumper","artist_mb","listeners_lastfm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport {\n    Table,\n    Pagination,\n    Select,\n    Row,\n    Col,\n    Divider,\n    Slider,\n    Rate\n} from 'antd'\nimport MenuBar from '../components/MenuBar';\nimport { getSimilarArtists, getSongKeyTime } from '../fetcher'\n\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nconst songColumns = [\n    {\n        title: 'Name',\n        dataIndex: 'name_',\n        key: 'name_',\n        sorter: (a, b) => a.name_.localeCompare(b.name_)\n    },\n    {\n        title: 'Artist',\n        dataIndex: 'artist',\n        key: 'artist',\n        sorter: (a, b) => a.artist_.localeCompare(b.artist)\n    },\n    {\n        title: 'Key',\n        dataIndex: 'key_',\n        key: 'key_',\n    },\n    {\n        title: 'Time Signature',\n        dataIndex: 'time_signature',\n        key: 'time_signature',\n    },\n];\n\nclass SongsPage extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            songQuery: '',\n            similarSongKeyTime: []\n        }\n        this.updateSearchResults = this.updateSearchResults.bind(this)\n        this.handleSongQueryChange = this.handleSongQueryChange.bind(this)\n    }\n\n    handleSongQueryChange(event) {\n        this.setState({ songQuery: event.target.value })\n    }\n\n    updateSearchResults() {\n        getSongKeyTime(this.state.songQuery, null, null).then(res => {\n            this.setState({ similarSongKeyTime: res.results })\n        })\n    }\n\n\n    componentDidMount() {\n        getSimilarArtists(this.state.artistQuery, null, null).then(res => {\n            this.setState({ topArtistResults: res.results })\n        })\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <MenuBar />\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Artist</label>\n                            <FormInput placeholder=\"Name\" value={this.state.artistQuery} onChange={this.handleArtistQueryChange} />\n                        </FormGroup></Col>\n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\n                        </FormGroup></Col>\n                    </Row>\n\n                </Form>\n                <Divider />\n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <h3>Similar Songs</h3>\n                    {/* <Table dataSource={this.state.topArtistResults} columns={artistColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/> */}\n\n                    <Table\n                        // return {\n                        //   onClick: event => { this.goToMatch(record.MatchId) }, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                        // };\n                        dataSource={this.state.topArtistResults} pagination={{ pageSizeOptions: [5, 10], defaultPageSize: 5, showQuickJumper: true }}>\n                        <Column title=\"Artist\" dataIndex=\"artist_mb\" key=\"artist_mb\" sorter={(a, b) => a.artist_mb.localeCompare(b.artist_mb)} />\n                        <Column title=\"Tags\" dataIndex=\"tags_lastfm\" key=\"Tags\" />\n                        <Column title=\"Listeners\" dataIndex=\"listeners_lastfm\" key=\"listeners_lastfm\" sorter={(a, b) => a.listeners_lastfm - b.listeners_lastfm} />\n\n                    </Table>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default SongsPage\n\n"]},"metadata":{},"sourceType":"module"}